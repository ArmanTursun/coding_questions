# Easy

# You are given two strings s and t.
#
# String t is generated by random shuffling string s and then add one more letter at a random position.
#
# Return the letter that was added to t.
#
#
#
# Example 1:
#
# Input: s = "abcd", t = "abcde"
# Output: "e"
# Explanation: 'e' is the letter that was added.

# Constraints:
#
# 0 <= s.length <= 1000
# t.length == s.length + 1
# s and t consist of lowercase English letters.

class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        counts1 = Counter(s)
        counts2 = Counter(t)

        for letter in counts2:
            if letter not in counts1 or counts2[letter] > counts1[letter]:
                return letter
## Cronor cases: s is empty, letter added is already exist in s. (second case shouldn't use hashset)
## T = O(n); S = (1) 26 lowercase letters


class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        s_ = sorted(s)
        t_ = sorted(t)

        for i in range(len(t_)):
            if i >= len(s_) or s_[i] != t_[i]:
                return t_[i]
## T = O(nlog(n)); S = O(1) 26 letters


class Solution:
    def findTheDifference(self, s: str, t: str) -> str:
        result = 0

        for letter in s:
            result ^= ord(letter)
        for letter in t:
            result ^= ord(letter)
        return chr(result)
## T = O(n); S = O(1)